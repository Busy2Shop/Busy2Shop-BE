openapi: 3.0.0
info:
  title: Location API
  version: 1.0.0
  description: API for managing location-based services in the Busy2Shop platform
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: ${protocol}://${host}/api/v0
    description: Development server

components:
  schemas:
    LocationCoordinates:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double

    Market:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        address:
          type: object
        geoLocation:
          type: object
        distance:
          type: number
          description: Distance in meters from the query location
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        owner:
          type: object
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string

    NearbyMarketsResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            markets:
              type: array
              items:
                $ref: '#/components/schemas/Market'
            pagination:
              type: object
              properties:
                total:
                  type: integer
                pages:
                  type: integer
                current:
                  type: integer
                pageSize:
                  type: integer

    Agent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        currentLocation:
          $ref: '#/components/schemas/LocationCoordinates'
        distance:
          type: number
          description: Distance in meters from the query location

    AgentsResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            count:
              type: integer
            agents:
              type: array
              items:
                $ref: '#/components/schemas/Agent'

    LocationUpdateResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            id:
              type: string
            currentLocation:
              $ref: '#/components/schemas/LocationCoordinates'

    ETAResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
          properties:
            agent:
              type: object
              properties:
                id:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
            currentLocation:
              $ref: '#/components/schemas/LocationCoordinates'
            destination:
              $ref: '#/components/schemas/LocationCoordinates'
            distance:
              type: object
              properties:
                meters:
                  type: number
                kilometers:
                  type: number
            eta:
              type: object
              properties:
                estimatedTimeSeconds:
                  type: number
                estimatedArrival:
                  type: string
                  format: date-time

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /location/markets/nearby:
    get:
      summary: Find nearby markets
      description: Retrieves markets near a specified location with advanced filtering options
      tags:
        - Location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Latitude of the search location
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Longitude of the search location
        - in: query
          name: distance
          schema:
            type: number
            format: double
          description: Search radius in kilometers (default 5)
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of results to return (default 10)
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination (default 1)
        - in: query
          name: q
          schema:
            type: string
          description: Search query for market name or description
      responses:
        '200':
          description: Markets retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NearbyMarketsResponse'
        '400':
          description: Invalid coordinates provided

  /location/markets:
    get:
      summary: Get nearby markets
      description: Retrieves markets near a specified location
      tags:
        - Location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Latitude of the search location
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Longitude of the search location
        - in: query
          name: distance
          schema:
            type: number
            format: double
          description: Search radius in kilometers (default 5)
      responses:
        '200':
          description: Markets retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NearbyMarketsResponse'
        '400':
          description: Invalid coordinates provided

  /location/agents/available:
    get:
      summary: Find available agents
      description: Retrieves available agents near a specified location
      tags:
        - Location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Latitude of the search location
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Longitude of the search location
        - in: query
          name: distance
          schema:
            type: number
            format: double
          description: Search radius in kilometers (default 5)
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of results to return (default 10)
      responses:
        '200':
          description: Available agents retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsResponse'
        '400':
          description: Invalid coordinates provided

  /location/agents/nearby-for-orders:
    get:
      summary: Find nearby agents for orders
      description: Retrieves agents near a specified location that are available for orders
      tags:
        - Location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Latitude of the search location
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Longitude of the search location
        - in: query
          name: distance
          schema:
            type: number
            format: double
          description: Search radius in kilometers (default 5)
        - in: query
          name: available
          schema:
            type: boolean
          description: Filter for available agents only (default true)
      responses:
        '200':
          description: Nearby agents for orders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsResponse'
        '400':
          description: Invalid coordinates provided

  /location/agents/nearby:
    get:
      summary: Get nearby agents
      description: Retrieves agents near a specified location
      tags:
        - Location
      parameters:
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Latitude of the search location
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Longitude of the search location
        - in: query
          name: distance
          schema:
            type: number
            format: double
          description: Search radius in kilometers (default 5)
      responses:
        '200':
          description: Nearby agents retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsResponse'
        '400':
          description: Invalid coordinates provided

  /location/agent/{orderId}/eta:
    get:
      summary: Get agent location and ETA
      description: Retrieves the current location of an order's assigned agent and estimated time of arrival to a destination
      tags:
        - Location
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
            format: uuid
          description: Order ID
        - in: query
          name: lat
          required: true
          schema:
            type: number
            format: double
          description: Destination latitude
        - in: query
          name: lng
          required: true
          schema:
            type: number
            format: double
          description: Destination longitude
      responses:
        '200':
          description: Agent location and ETA retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETAResponse'
        '400':
          description: Invalid parameters provided
        '404':
          description: Order not found or no agent assigned