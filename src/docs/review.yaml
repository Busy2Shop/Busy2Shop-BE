openapi: 3.0.0
info:
  title: Review API
  version: 1.0.0
  description: API for managing reviews for markets and products
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: ${protocol}://${host}/api/v0
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          format: email
          description: Email of the user

    Market:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the market
        name:
          type: string
          description: Name of the market
        marketType:
          type: string
          description: Type of market
        address:
          type: string
          description: Address of the market

    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        price:
          type: number
          description: Price of the product

    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the review
        comment:
          type: string
          description: Comment text of the review
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: Rating given (1-5 stars)
        images:
          type: array
          items:
            type: string
            format: uri
          description: Array of image URLs associated with the review
        reviewerId:
          type: string
          format: uuid
          description: ID of the user who wrote the review
        reviewer:
          $ref: '#/components/schemas/User'
        marketId:
          type: string
          format: uuid
          nullable: true
          description: ID of the market being reviewed (null if reviewing a product)
        market:
          $ref: '#/components/schemas/Market'
        productId:
          type: string
          format: uuid
          nullable: true
          description: ID of the product being reviewed (null if reviewing a market)
        product:
          $ref: '#/components/schemas/Product'
        createdAt:
          type: string
          format: date-time
          description: When the review was created
        updatedAt:
          type: string
          format: date-time
          description: When the review was last updated

    ReviewCreateRequest:
      type: object
      properties:
        comment:
          type: string
          description: Comment text of the review
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: Rating given (1-5 stars)
        marketId:
          type: string
          format: uuid
          description: ID of the market being reviewed
        productId:
          type: string
          format: uuid
          description: ID of the product being reviewed
      required:
        - comment
        - rating

    ReviewUpdateRequest:
      type: object
      properties:
        comment:
          type: string
          description: Comment text of the review
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: Rating given (1-5 stars)
        appendImages:
          type: boolean
          description: Whether to append new images to existing ones

    ReviewStats:
      type: object
      properties:
        averageRating:
          type: number
          format: float
          description: Average rating value
        totalReviews:
          type: integer
          description: Total number of reviews

    ReviewableItems:
      type: object
      properties:
        markets:
          type: array
          items:
            $ref: '#/components/schemas/Market'
          description: Markets that can be reviewed
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Products that can be reviewed

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /review:
    get:
      summary: Get all reviews
      tags:
        - Review
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: rating
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filter by rating
        - in: query
          name: marketId
          schema:
            type: string
            format: uuid
          description: Filter by market ID
        - in: query
          name: productId
          schema:
            type: string
            format: uuid
          description: Filter by product ID
        - in: query
          name: reviewerId
          schema:
            type: string
            format: uuid
          description: Filter by reviewer ID
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Reviews retrieved successfully
                  data:
                    type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
                      count:
                        type: integer
                        description: Total count of reviews
                      totalPages:
                        type: integer
                        description: Total number of pages

    post:
      summary: Create a new review
      description: Users can only review markets or products they have completed orders from
      tags:
        - Review
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Comment text of the review
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Rating given (1-5 stars)
                marketId:
                  type: string
                  format: uuid
                  description: ID of the market being reviewed
                productId:
                  type: string
                  format: uuid
                  description: ID of the product being reviewed
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Images to attach to the review (up to 5)
      responses:
        '201':
          description: Review created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Review created successfully
                  data:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Bad request - Missing required fields, invalid data, or not eligible to review
        '401':
          description: Unauthorized - Authentication required

  /review/{id}:
    get:
      summary: Get a specific review
      tags:
        - Review
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the review to retrieve
      responses:
        '200':
          description: Review retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Review retrieved successfully
                  data:
                    $ref: '#/components/schemas/Review'
        '404':
          description: Review not found

    put:
      summary: Update a review
      tags:
        - Review
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the review to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: Comment text of the review
                rating:
                  type: integer
                  description: Rating given (1-5 stars)
                appendImages:
                  type: string
                  description: Whether to append new images to existing ones (true/false)
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Images to attach to the review (up to 5)
      responses:
        '200':
          description: Review updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Review updated successfully
                  data:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Bad request - Invalid data
        '401':
          description: Unauthorized - Authentication required
        '403':
          description: Forbidden - Not authorized to update this review
        '404':
          description: Review not found

    delete:
      summary: Delete a review
      tags:
        - Review
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the review to delete
      responses:
        '200':
          description: Review deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Review deleted successfully
                  data:
                    type: string
        '401':
          description: Unauthorized - Authentication required
        '403':
          description: Forbidden - Not authorized to delete this review
        '404':
          description: Review not found

  /review/market/{marketId}:
    get:
      summary: Get reviews for a specific market
      tags:
        - Review
      parameters:
        - in: path
          name: marketId
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the market
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: rating
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filter by rating
      responses:
        '200':
          description: Market reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Market reviews retrieved successfully
                  data:
                    type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
                      count:
                        type: integer
                        description: Total count of reviews
                      totalPages:
                        type: integer
                        description: Total number of pages
                      averageRating:
                        type: number
                        description: Average rating for the market
                      totalReviews:
                        type: integer
                        description: Total number of reviews for the market
        '404':
          description: Market not found

  /review/product/{productId}:
    get:
      summary: Get reviews for a specific product
      tags:
        - Review
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the product
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: rating
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: Filter by rating
      responses:
        '200':
          description: Product reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product reviews retrieved successfully
                  data:
                    type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
                      count:
                        type: integer
                        description: Total count of reviews
                      totalPages:
                        type: integer
                        description: Total number of pages
                      averageRating:
                        type: number
                        description: Average rating for the product
                      totalReviews:
                        type: integer
                        description: Total number of reviews for the product
        '404':
          description: Product not found

  /review/user/{userId}:
    get:
      summary: Get reviews by a specific user
      tags:
        - Review
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the user
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
      responses:
        '200':
          description: User reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User reviews retrieved successfully
                  data:
                    type: object
                    properties:
                      reviews:
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
                      count:
                        type: integer
                        description: Total count of reviews
                      totalPages:
                        type: integer
                        description: Total number of pages
        '401':
          description: Unauthorized - Authentication required

  /review/reviewable/items:
    get:
      summary: Get items that a user can review
      description: Returns markets and products that the authenticated user can review
      tags:
        - Review
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Reviewable items retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Reviewable items retrieved successfully
                  data:
                    $ref: '#/components/schemas/ReviewableItems'
        '401':
          description: Unauthorized - Authentication required