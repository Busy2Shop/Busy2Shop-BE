openapi: 3.0.0
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - userType
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: "Password123!"
                userType:
                  type: string
                  enum: [ user, vendor ]
                  example: user
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Email verification code sent successfully
                  data:
                    type: object
                    properties:
                      user:
                        type: object
        409:
          description: Email already exists

  /auth/verifyemail:
    post:
      tags:
        - Authentication
      summary: Verify email with OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - otpCode
                - email
              properties:
                otpCode:
                  type: string
                  example: "123456"
                email:
                  type: string
                  format: email
      responses:
        200:
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                      accessToken:
                        type: string
                      refreshToken:
                        type: string

  /auth/resendverifyemail:
    get:
      tags:
        - Authentication
      summary: Resend verification email
      parameters:
        - in: query
          name: email
          schema:
            type: string
            format: email
          required: true
      responses:
        200:
          description: Verification email resent

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                      accessToken:
                        type: string
                      refreshToken:
                        type: string

  /auth/changepassword:
    post:
      tags:
        - Authentication
      security:
        - BearerAuth: [ ]
      summary: Change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: Password changed successfully

  /auth/logout:
    get:
      tags:
        - Authentication
      security:
        - BearerAuth: [ ]
      summary: Logout user
      responses:
        200:
          description: Logout successful

  /auth/loggeduser:
    get:
      tags:
        - Authentication
      security:
        - BearerAuth: [ ]
      summary: Get logged in user data
      responses:
        200:
          description: User data retrieved successfully

info:
  title: Authentication API
  description: Authentication endpoints for Busy2Shop e-commerce platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: http://localhost:8000/api/v0
    description: Development server