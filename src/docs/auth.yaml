openapi: 3.0.0
info:
  title: Authentication API
  description: Authentication endpoints for Busy2Shop e-commerce platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: ${protocol}://${host}/api/v0
    description: Development server
components:
  schemas:
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "Password123!"

    CustomerSignup:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
        - dob
        - gender
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "Password123!"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        otherName:
          type: string
          example: "Smith"
        gender:
          type: string
          example: "male"
        displayImage:
          type: string
          format: uri
          example: "https://example.com/image.jpg"
        location:
          type: object
          properties:
            country:
              type: string
              example: "United States"
            city:
              type: string
              example: "New York"
            address:
              type: string
              example: "123 Main St"
        phone:
          type: object
          properties:
            countryCode:
              type: string
              example: "+1"
            number:
              type: string
              example: "2345678900"
        dob:
          type: string
          format: date
          example: "1990-01-01"

    AgentSignup:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
        - dob
        - gender
      properties:
        email:
          type: string
          format: email
          example: "agent@example.com"
        password:
          type: string
          format: password
          example: "Password123!"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        otherName:
          type: string
          example: "Smith"
        gender:
          type: string
          example: "male"
        displayImage:
          type: string
          format: uri
          example: "https://example.com/image.jpg"
        location:
          type: object
          properties:
            country:
              type: string
              example: "United States"
            city:
              type: string
              example: "New York"
            address:
              type: string
              example: "123 Main St"
        phone:
          type: object
          properties:
            countryCode:
              type: string
              example: "+1"
            number:
              type: string
              example: "2345678900"
        dob:
          type: string
          format: date
          example: "1990-01-01"

    VerifyEmail:
      type: object
      required:
        - otpCode
        - email
      properties:
        otpCode:
          type: string
          example: "123456"
        email:
          type: string
          format: email
          example: "user@example.com"

    ForgotPassword:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        redirectUrl:
          type: string
          format: uri
          example: "https://example.com/reset-password"

    ResetPassword:
      type: object
      required:
        - resetToken
        - email
        - newPassword
      properties:
        resetToken:
          type: string
          example: "abc123def456"
        email:
          type: string
          format: email
          example: "user@example.com"
        newPassword:
          type: string
          format: password
          example: "NewPassword123!"

    ChangePassword:
      type: object
      required:
        - oldPassword
        - newPassword
      properties:
        oldPassword:
          type: string
          format: password
          example: "OldPassword123!"
        newPassword:
          type: string
          format: password
          example: "NewPassword123!"

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        otherName:
          type: string
        fullName:
          type: string
        gender:
          type: string
        displayImage:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        phone:
          $ref: '#/components/schemas/Phone'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: object
          properties:
            activated:
              type: boolean
            emailVerified:
              type: boolean
            userType:
              type: string
              enum: [customer, agent]

    Phone:
      type: object
      properties:
        countryCode:
          type: string
        number:
          type: string

    Location:
      type: object
      properties:
        country:
          type: string
        city:
          type: string
        address:
          type: string



paths:
  /auth/validate-auth:
    post:
      tags:
        - Authentication
      summary: Validate initial signup data
      description: Validates email/phone and password for initial signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
                phone:
                  type: object
                  properties:
                    countryCode:
                      type: string
                      description: Country code (e.g., +234)
                    number:
                      type: string
                      description: Phone number
      responses:
        '200':
          description: Validation successful
        '400':
          description: Invalid input data
        '409':
          description: Email/phone already exists

  /auth/customer/signup:
    post:
      tags:
        - Authentication
      summary: Customer signup
      description: Register a new customer account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: object
                  properties:
                    countryCode:
                      type: string
                    number:
                      type: string
      responses:
        '201':
          description: Customer account created successfully
        '400':
          description: Invalid input data
        '409':
          description: Email/phone already exists

  /auth/agent/signup:
    post:
      tags:
        - Authentication
      summary: Agent signup
      description: Register a new agent account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: object
                  properties:
                    countryCode:
                      type: string
                    number:
                      type: string
      responses:
        '201':
          description: Agent account created successfully
        '400':
          description: Invalid input data
        '409':
          description: Email/phone already exists

  /auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Verify email address
      description: Verify user's email address with verification code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - code
              properties:
                email:
                  type: string
                  format: email
                code:
                  type: string
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid verification code
        '404':
          description: User not found

  /auth/resend-verification:
    post:
      tags:
        - Authentication
      summary: Resend verification email
      description: Resend email verification code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Verification email sent successfully
        '404':
          description: User not found

  /auth/complete-account:
    post:
      tags:
        - Authentication
      summary: Complete account setup
      description: Complete user account setup with additional information
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Account completed successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized

  /auth/customer/login:
    post:
      tags:
        - Authentication
      summary: Customer login
      description: Login as a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: object
                  properties:
                    countryCode:
                      type: string
                    number:
                      type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    type: object
        '400':
          description: Invalid credentials
        '401':
          description: Unauthorized

  /auth/agent/login:
    post:
      tags:
        - Authentication
      summary: Agent login
      description: Login as an agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: object
                  properties:
                    countryCode:
                      type: string
                    number:
                      type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    type: object
        '400':
          description: Invalid credentials
        '401':
          description: Unauthorized

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      description: Logout user and invalidate tokens
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Forgot password
      description: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Password reset email sent
        '404':
          description: User not found

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      description: Reset password with token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid token
        '404':
          description: User not found

  /auth/change-password:
    post:
      tags:
        - Authentication
      summary: Change password
      description: Change user password
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                newPassword:
                  type: string
                  format: password
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid current password
        '401':
          description: Unauthorized

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get user data
      description: Get logged in user's data
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
        '401':
          description: Unauthorized
    put:
      tags:
        - Authentication
      summary: Update user data
      description: Update logged in user's data
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: User data updated successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized

  /auth/google/callback:
    get:
      tags:
        - Authentication
      summary: Google OAuth callback
      description: Handle Google OAuth callback
      parameters:
        - in: query
          name: code
          schema:
            type: string
          required: true
          description: Authorization code from Google
      responses:
        '200':
          description: Google authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    type: object
        '400':
          description: Invalid authorization code
        '401':
          description: Authentication failed