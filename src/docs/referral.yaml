openapi: 3.0.0
info:
  title: Referral API
  version: 1.0.0
  description: API for managing referrals and referral-related operations
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: ${protocol}://${host}/api/v0
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        username:
          type: string
          description: Username of the user
        email:
          type: string
          format: email
          description: Email of the user

    ReferralStatus:
      type: string
      enum:
        - pending
        - completed
        - cancelled
      description: Status of the referral

    Referral:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the referral
        refereeId:
          type: string
          format: uuid
          description: ID of the user who referred someone (the referrer)
        referee:
          $ref: '#/components/schemas/User'
        referredId:
          type: string
          format: uuid
          description: ID of the user who was referred
        referred:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/ReferralStatus'
        createdAt:
          type: string
          format: date-time
          description: When the referral was created
        updatedAt:
          type: string
          format: date-time
          description: When the referral was last updated

    ReferralCreateRequest:
      type: object
      properties:
        refereeId:
          type: string
          format: uuid
          description: ID of the user who is referring someone
        referredId:
          type: string
          format: uuid
          description: ID of the user who is being referred
        status:
          $ref: '#/components/schemas/ReferralStatus'
      required:
        - refereeId
        - referredId

    ReferralUpdateRequest:
      type: object
      properties:
        refereeId:
          type: string
          format: uuid
          description: ID of the user who is referring someone
        referredId:
          type: string
          format: uuid
          description: ID of the user who is being referred
        status:
          $ref: '#/components/schemas/ReferralStatus'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /referral:
    get:
      summary: Get all referrals
      tags:
        - Referral
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: refereeId
          schema:
            type: string
            format: uuid
          description: Filter by referee ID (referrer)
        - in: query
          name: referredId
          schema:
            type: string
            format: uuid
          description: Filter by referred ID (person who was referred)
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/ReferralStatus'
          description: Filter by referral status
      responses:
        '200':
          description: Referrals retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Referrals retrieved successfully
                  data:
                    type: object
                    properties:
                      referrals:
                        type: array
                        items:
                          $ref: '#/components/schemas/Referral'
                      count:
                        type: integer
                        description: Total count of referrals
                      totalPages:
                        type: integer
                        description: Total number of pages

    post:
      summary: Create a new referral
      tags:
        - Referral
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralCreateRequest'
      responses:
        '201':
          description: Referral created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Referral created successfully
                  data:
                    $ref: '#/components/schemas/Referral'
        '400':
          description: Bad request - Missing required fields or invalid data
        '401':
          description: Unauthorized - Authentication required

  /referral/{id}:
    get:
      summary: Get a specific referral
      tags:
        - Referral
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the referral to retrieve
      responses:
        '200':
          description: Referral retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Referral retrieved successfully
                  data:
                    $ref: '#/components/schemas/Referral'
        '404':
          description: Referral not found

    patch:
      summary: Update a referral
      tags:
        - Referral
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the referral to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralUpdateRequest'
      responses:
        '200':
          description: Referral updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Referral updated successfully
                  data:
                    $ref: '#/components/schemas/Referral'
        '400':
          description: Bad request - Invalid data
        '401':
          description: Unauthorized - Authentication required
        '404':
          description: Referral not found

    delete:
      summary: Delete a referral
      tags:
        - Referral
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the referral to delete
      responses:
        '200':
          description: Referral deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Referral deleted successfully
                  data:
                    type: string
        '401':
          description: Unauthorized - Authentication required
        '404':
          description: Referral not found