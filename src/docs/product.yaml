openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products in the Busy2Shop e-commerce platform
  contact:
    name: API Support
    email: support@busy2shop.com
  license:
    name: proprietary
servers:
  - url: http://localhost:8000/api/v0
    description: Development server

components:
  schemas:
    ProductResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        discountPrice:
          type: number
          format: float
          nullable: true
        images:
          type: array
          items:
            type: string
        barcode:
          type: string
        sku:
          type: string
        stockQuantity:
          type: integer
        attributes:
          type: object
        isAvailable:
          type: boolean
        marketId:
          type: string
          format: uuid
        market:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            marketType:
              type: string
            address:
              type: object

    PaginatedProducts:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Products retrieved successfully
        data:
          type: object
          properties:
            products:
              type: array
              items:
                $ref: '#/components/schemas/ProductResponse'
            count:
              type: integer
            totalPages:
              type: integer

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /product:
    get:
      summary: Get all products
      description: Retrieves a paginated list of all products with optional filters
      tags:
        - Products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: q
          schema:
            type: string
          description: Search query for product name, description, or barcode
        - in: query
          name: marketId
          schema:
            type: string
            format: uuid
          description: Filter by market ID
        - in: query
          name: minPrice
          schema:
            type: number
            format: float
          description: Minimum price for filtering
        - in: query
          name: maxPrice
          schema:
            type: number
            format: float
          description: Maximum price for filtering
        - in: query
          name: isAvailable
          schema:
            type: boolean
          description: Filter by availability status
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'

  /product/{id}:
    get:
      summary: Get a product by ID
      description: Retrieves a specific product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Product ID
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product retrieved successfully
                  data:
                    $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Product not found

  /product/market/{marketId}:
    get:
      summary: Get products by market ID
      description: Retrieves a paginated list of products for a specific market
      tags:
        - Products
      parameters:
        - in: path
          name: marketId
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the market to retrieve products for
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: minPrice
          schema:
            type: number
            format: float
          description: Minimum price for filtering
        - in: query
          name: maxPrice
          schema:
            type: number
            format: float
          description: Maximum price for filtering
        - in: query
          name: isAvailable
          schema:
            type: boolean
          description: Filter by availability status
      responses:
        '200':
          description: Market products retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        '404':
          description: Market not found

